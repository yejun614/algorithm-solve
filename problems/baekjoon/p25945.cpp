/*
 * (230226) 컨테이너 재배치
 * https://www.acmicpc.net/problem/25945
 *
 * [풀이]
 * 문제에서 주어진 조건과 같이 가로로 뻗은 칸들에 각각 컨테이너가 임의의 개수로
 * 쌓여 있다. 이 때 서로 다른 칸의 컨테이너 높이을 비교했을 때 차이가 1이하가
 * 되도록 하고자 한다. 컨테이너는 한번에 한개씩만 다른 칸으로 옮길 수 있는데
 * 최소한 몇 개를 옮겨야 높이의 차이가 1이하가 되는지 구해야 한다.
 *
 * 우선 서로 다른 칸의 컨테이너 높이의 차이가 1이하가 되는 이상적인 컨테이너
 * 높이를 구해야 한다. 입력에서 주어진 각 칸의 컨테이너의 개수를 모두 더하여
 * 전체 컨테이너의 개수를 구한다.
 *
 * 여기서 (전체 컨테이너 수) / (칸의 개수) = (이상적인 컨테이너 높이) 임을
 * 알 수 있다. 또한 방금 계산에서 나눈것의 나머지 값을 통해서
 * (이상적인 컨테이너 높이) 보다 1만큼 높이가 높은 컨테이너의 개수 또한 알 수 있다.
 *
 * 위의 계산을 이용해서 각 칸의 높이가 (이상적인 컨테이너 높이)의 차이를
 * 모두 더하여 우리가 구하고자 하는 정답을 알 수 있다.
 *
 * 여기서 A = (각 칸의 높이) - (이상적인 컨테이너 높이), A >= 0를 만족하는
 * A의 합을 계산하며 일부 칸의 높이는 (이상적인 컨테이너 높이) + 1가 되어야
 * 함에 주의한다.
 *
 * 자세한 풀이는 아래 코드를 참고.
 */

#include <cstdio>
#define SIZE 1000001

int arr[SIZE];

int main() {
  int N;
  scanf("%d", &N);

  int sum = 0;
  for (int i = 0; i < N; ++i) {
    scanf("%d", arr + i);
    sum += arr[i];
  }

  const int height = sum / N;
  int count = N - (sum % N), answer = 0, current;

  for (int i = 0; i < N; ++i) {
    current = height - arr[i];

    if (current < 0) continue;

    answer += current;
    answer += (--count < 0) ? 1 : 0;
  }

  printf("%d\n", answer);

  return 0;
}
